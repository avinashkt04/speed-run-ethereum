{
  "address": "0x782AEA9E519573AA06d5F0a62DbAe067F663F432",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenOutput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethInput",
          "type": "uint256"
        }
      ],
      "name": "EthToTokenSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethInput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensInput",
          "type": "uint256"
        }
      ],
      "name": "LiquidityProvided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityRemover",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityWithdrawn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOutput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethOutput",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensInput",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethOutput",
          "type": "uint256"
        }
      ],
      "name": "TokenToEthSwap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokensDeposited",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenOutput",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "getLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "xInput",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "xReserves",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yReserves",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "yOutput",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenInput",
          "type": "uint256"
        }
      ],
      "name": "tokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethOutput",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2ca6c66ca7185dd18b410aa4cb6c7989357e1ede913e1528a278dbcb8b8eed73",
  "receipt": {
    "to": null,
    "from": "0x11c6efEAa505dE5C1b13406a887f6B508866aC41",
    "contractAddress": "0x782AEA9E519573AA06d5F0a62DbAe067F663F432",
    "transactionIndex": 39,
    "gasUsed": "819320",
    "logsBloom": "0x
    "blockHash": "0x8155bef24d1c9671d8233e7f634af6e534954b0854efe2bcd9981bc2b63739a2",
    "transactionHash": "0x2ca6c66ca7185dd18b410aa4cb6c7989357e1ede913e1528a278dbcb8b8eed73",
    "logs": [],
    "blockNumber": 6892890,
    "cumulativeGasUsed": "8939937",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x787533F1c04a06f02325460Ed47Df578c7152521"
  ],
  "numDeployments": 1,
  "solcInputHash": "63a3001000bc39915375c3bf6d1fbb51",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenOutput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethInput\",\"type\":\"uint256\"}],\"name\":\"EthToTokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethInput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensInput\",\"type\":\"uint256\"}],\"name\":\"LiquidityProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityRemover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensOutput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensInput\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"name\":\"TokenToEthSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensDeposited\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenOutput\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"xInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yReserves\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yOutput\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenInput\",\"type\":\"uint256\"}],\"name\":\"tokenToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/DEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract DEX {\\n    /* ========== GLOBAL VARIABLES ========== */\\n\\n    IERC20 token; // Token interface\\n    uint256 public totalLiquidity; // Total liquidity in the DEX\\n    mapping (address => uint256) public liquidity; // Liquidity of each user\\n\\n    /* ========== EVENTS ========== */\\n\\n    event EthToTokenSwap(address indexed swapper, uint256 tokenOutput, uint256 ethInput);\\n    event TokenToEthSwap(address indexed swapper, uint256 tokensInput, uint256 ethOutput);\\n    event LiquidityProvided(address indexed liquidityProvider, uint256 liquidityMinted, uint256 ethInput, uint256 tokensInput);\\n    event LiquidityRemoved(address indexed liquidityRemover, uint256 liquidityWithdrawn, uint256 tokensOutput, uint256 ethOutput);\\n\\n    /* ========== CONSTRUCTOR ========== */\\n\\n    constructor(address tokenAddr) {\\n        token = IERC20(tokenAddr); // Assign token address\\n    }\\n\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n    function init(uint256 tokens) public payable returns (uint256) {\\n        require(totalLiquidity == 0, \\\"DEX: already has liquidity\\\");\\n        totalLiquidity = address(this).balance;\\n        liquidity[msg.sender] = totalLiquidity;\\n        require(token.transferFrom(msg.sender, address(this), tokens), \\\"DEX: Token transfer failed\\\");\\n        return totalLiquidity;\\n    }\\n\\n    function price(\\n        uint256 xInput,\\n        uint256 xReserves,\\n        uint256 yReserves\\n    ) public pure returns (uint256 yOutput) {\\n        uint256 xInputWithFee = xInput * 997;\\n        uint256 numerator = xInputWithFee * yReserves;\\n        uint256 denominator = (xReserves * 1000) + xInputWithFee;\\n        return (numerator / denominator);\\n    }\\n\\n    function getLiquidity(address lp) public view returns (uint256) {\\n        return liquidity[lp]; // Return the liquidity of the user\\n    }\\n\\n    function ethToToken() public payable returns (uint256 tokenOutput) {\\n        require(msg.value > 0, \\\"DEX: Cannot swap 0 ETH\\\");\\n        uint256 ethReserve = address(this).balance - msg.value;\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        tokenOutput = price(msg.value, ethReserve, tokenReserve);\\n        require(token.transfer(msg.sender, tokenOutput), \\\"DEX: Token transfer failed\\\");\\n        emit EthToTokenSwap(msg.sender, tokenOutput, msg.value);\\n        return tokenOutput;\\n    }\\n\\n    function tokenToEth(uint256 tokenInput) public returns (uint256 ethOutput) {\\n        require(tokenInput > 0, \\\"DEX: Cannot swap 0 token\\\");\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        ethOutput = price(tokenInput, tokenReserve, address(this).balance);\\n        require(token.transferFrom(msg.sender, address(this), tokenInput), \\\"DEX: Token transfer failed\\\");\\n        (bool sent, ) = msg.sender.call{ value: ethOutput }(\\\"\\\");\\n        require(sent, \\\"DEX: ETH transfer failed\\\");\\n        emit TokenToEthSwap(msg.sender, tokenInput, ethOutput);\\n        return ethOutput;\\n    }\\n\\n    function deposit() public payable returns (uint256 tokensDeposited) {\\n        require(msg.value > 0, \\\"DEX: Must send ETH to deposit\\\");\\n        uint256 ethReserve = address(this).balance - msg.value;\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 tokenDeposit = (msg.value * tokenReserve / ethReserve) + 1;\\n        uint256 liquidityMinted = msg.value * totalLiquidity / ethReserve;\\n        liquidity[msg.sender] += liquidityMinted;\\n        totalLiquidity += liquidityMinted;\\n        require(token.transferFrom(msg.sender, address(this), tokenDeposit), \\\"DEX: Token transfer failed\\\");\\n        emit LiquidityProvided(msg.sender, liquidityMinted, msg.value, tokenDeposit);\\n        return tokenDeposit;\\n    }\\n\\n    function withdraw(uint256 amount) public returns (uint256 ethAmount, uint256 tokenAmount) {\\n        require(liquidity[msg.sender] >= amount, \\\"DEX: Insufficient liquidity\\\");\\n        uint256 ethReserve = address(this).balance;\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        ethAmount = amount * ethReserve / totalLiquidity;\\n        tokenAmount = amount * tokenReserve / totalLiquidity;\\n        liquidity[msg.sender] -= amount;\\n        totalLiquidity -= amount;\\n        (bool sent, ) = payable(msg.sender).call{ value: ethAmount }(\\\"\\\");\\n        require(sent, \\\"DEX: ETH transfer failed\\\");\\n        require(token.transfer(msg.sender, tokenAmount), \\\"DEX: Token transfer failed\\\");\\n        emit LiquidityRemoved(msg.sender, amount, tokenAmount, ethAmount);\\n        return (ethAmount, tokenAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xa2ebb68d8502c05b9219a10e39aed009ce05f050e90bc9c4ff16395ac3ff0b66\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610dff380380610dff83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610d6c806100936000396000f3fe6080604052600436106100865760003560e01c8063789770f411610059578063789770f414610129578063a747b93b14610131578063b7b0422d14610167578063b8c876b11461017a578063d0e30db0146101a757600080fd5b806315770f921461008b5780632071a9f4146100b45780632e1a7d4d146100d457806370b2a30f14610109575b600080fd5b34801561009757600080fd5b506100a160015481565b6040519081526020015b60405180910390f35b3480156100c057600080fd5b506100a16100cf366004610bd4565b6101af565b3480156100e057600080fd5b506100f46100ef366004610c00565b6101fe565b604080519283526020830191909152016100ab565b34801561011557600080fd5b506100a1610124366004610c00565b6104b7565b6100a16106ef565b34801561013d57600080fd5b506100a161014c366004610c19565b6001600160a01b031660009081526002602052604090205490565b6100a1610175366004610c00565b610895565b34801561018657600080fd5b506100a1610195366004610c19565b60026020526000908152604090205481565b6100a16109a1565b6000806101be856103e5610c5f565b905060006101cc8483610c5f565b90506000826101dd876103e8610c5f565b6101e79190610c7c565b90506101f38183610c8f565b979650505050505050565b3360009081526002602052604081205481908311156102645760405162461bcd60e51b815260206004820152601b60248201527f4445583a20496e73756666696369656e74206c6971756964697479000000000060448201526064015b60405180910390fd5b600080546040516370a0823160e01b81523060048201524792916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610cb1565b6001549091506102e28387610c5f565b6102ec9190610c8f565b6001549094506102fc8287610c5f565b6103069190610c8f565b3360009081526002602052604081208054929550879290919061032a908490610cca565b9250508190555084600160008282546103439190610cca565b9091555050604051600090339086908381818185875af1925050503d806000811461038a576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b606091505b50509050806103db5760405162461bcd60e51b81526020600482015260186024820152771111560e88115512081d1c985b9cd9995c8819985a5b195960421b604482015260640161025b565b60005460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190610cdd565b61046c5760405162461bcd60e51b815260040161025b90610cff565b604080518781526020810186905290810186905233907f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d9060600160405180910390a2505050915091565b60008082116105085760405162461bcd60e51b815260206004820152601860248201527f4445583a2043616e6e6f742073776170203020746f6b656e0000000000000000604482015260640161025b565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190610cb1565b90506105828382476101af565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529193506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610cdd565b61061a5760405162461bcd60e51b815260040161025b90610cff565b604051600090339084908381818185875af1925050503d806000811461065c576040519150601f19603f3d011682016040523d82523d6000602084013e610661565b606091505b50509050806106ad5760405162461bcd60e51b81526020600482015260186024820152771111560e88115512081d1c985b9cd9995c8819985a5b195960421b604482015260640161025b565b604080518581526020810185905233917f472303b1e7ca7d00fb77f255c0a8c577f9ca4264c0306aaed3ff18e831523a6d910160405180910390a25050919050565b60008034116107395760405162461bcd60e51b81526020600482015260166024820152750888ab0744086c2dcdcdee840e6eec2e04060408aa8960531b604482015260640161025b565b60006107453447610cca565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190610cb1565b90506107c43483836101af565b60005460405163a9059cbb60e01b8152336004820152602481018390529194506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a9190610cdd565b6108565760405162461bcd60e51b815260040161025b90610cff565b6040805184815234602082015233917f6d4870e9281c01ea54a4420c8684ac713b77f0c590b40c4b1fbf4c6ba892ccea910160405180910390a2505090565b60006001546000146108e95760405162461bcd60e51b815260206004820152601a60248201527f4445583a20616c726561647920686173206c6971756964697479000000000000604482015260640161025b565b47600181905533600081815260026020526040808220939093555491516323b872dd60e01b81526004810191909152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190610cdd565b6109995760405162461bcd60e51b815260040161025b90610cff565b505060015490565b60008034116109f25760405162461bcd60e51b815260206004820152601d60248201527f4445583a204d7573742073656e642045544820746f206465706f736974000000604482015260640161025b565b60006109fe3447610cca565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190610cb1565b9050600082610a7f8334610c5f565b610a899190610c8f565b610a94906001610c7c565b905060008360015434610aa79190610c5f565b610ab19190610c8f565b33600090815260026020526040812080549293508392909190610ad5908490610c7c565b925050819055508060016000828254610aee9190610c7c565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6e9190610cdd565b610b8a5760405162461bcd60e51b815260040161025b90610cff565b6040805182815234602082015290810183905233907f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009060600160405180910390a2509392505050565b600080600060608486031215610be957600080fd5b505081359360208301359350604090920135919050565b600060208284031215610c1257600080fd5b5035919050565b600060208284031215610c2b57600080fd5b81356001600160a01b0381168114610c4257600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c7657610c76610c49565b92915050565b80820180821115610c7657610c76610c49565b600082610cac57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610cc357600080fd5b5051919050565b81810381811115610c7657610c76610c49565b600060208284031215610cef57600080fd5b81518015158114610c4257600080fd5b6020808252601a908201527f4445583a20546f6b656e207472616e73666572206661696c656400000000000060408201526060019056fea26469706673582212201f4260af33d43c2270a4f4024459ab78deabbe9c01369c3cc7ff37927f74009e64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063789770f411610059578063789770f414610129578063a747b93b14610131578063b7b0422d14610167578063b8c876b11461017a578063d0e30db0146101a757600080fd5b806315770f921461008b5780632071a9f4146100b45780632e1a7d4d146100d457806370b2a30f14610109575b600080fd5b34801561009757600080fd5b506100a160015481565b6040519081526020015b60405180910390f35b3480156100c057600080fd5b506100a16100cf366004610bd4565b6101af565b3480156100e057600080fd5b506100f46100ef366004610c00565b6101fe565b604080519283526020830191909152016100ab565b34801561011557600080fd5b506100a1610124366004610c00565b6104b7565b6100a16106ef565b34801561013d57600080fd5b506100a161014c366004610c19565b6001600160a01b031660009081526002602052604090205490565b6100a1610175366004610c00565b610895565b34801561018657600080fd5b506100a1610195366004610c19565b60026020526000908152604090205481565b6100a16109a1565b6000806101be856103e5610c5f565b905060006101cc8483610c5f565b90506000826101dd876103e8610c5f565b6101e79190610c7c565b90506101f38183610c8f565b979650505050505050565b3360009081526002602052604081205481908311156102645760405162461bcd60e51b815260206004820152601b60248201527f4445583a20496e73756666696369656e74206c6971756964697479000000000060448201526064015b60405180910390fd5b600080546040516370a0823160e01b81523060048201524792916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610cb1565b6001549091506102e28387610c5f565b6102ec9190610c8f565b6001549094506102fc8287610c5f565b6103069190610c8f565b3360009081526002602052604081208054929550879290919061032a908490610cca565b9250508190555084600160008282546103439190610cca565b9091555050604051600090339086908381818185875af1925050503d806000811461038a576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b606091505b50509050806103db5760405162461bcd60e51b81526020600482015260186024820152771111560e88115512081d1c985b9cd9995c8819985a5b195960421b604482015260640161025b565b60005460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190610cdd565b61046c5760405162461bcd60e51b815260040161025b90610cff565b604080518781526020810186905290810186905233907f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d9060600160405180910390a2505050915091565b60008082116105085760405162461bcd60e51b815260206004820152601860248201527f4445583a2043616e6e6f742073776170203020746f6b656e0000000000000000604482015260640161025b565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190610cb1565b90506105828382476101af565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529193506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610cdd565b61061a5760405162461bcd60e51b815260040161025b90610cff565b604051600090339084908381818185875af1925050503d806000811461065c576040519150601f19603f3d011682016040523d82523d6000602084013e610661565b606091505b50509050806106ad5760405162461bcd60e51b81526020600482015260186024820152771111560e88115512081d1c985b9cd9995c8819985a5b195960421b604482015260640161025b565b604080518581526020810185905233917f472303b1e7ca7d00fb77f255c0a8c577f9ca4264c0306aaed3ff18e831523a6d910160405180910390a25050919050565b60008034116107395760405162461bcd60e51b81526020600482015260166024820152750888ab0744086c2dcdcdee840e6eec2e04060408aa8960531b604482015260640161025b565b60006107453447610cca565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190610cb1565b90506107c43483836101af565b60005460405163a9059cbb60e01b8152336004820152602481018390529194506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a9190610cdd565b6108565760405162461bcd60e51b815260040161025b90610cff565b6040805184815234602082015233917f6d4870e9281c01ea54a4420c8684ac713b77f0c590b40c4b1fbf4c6ba892ccea910160405180910390a2505090565b60006001546000146108e95760405162461bcd60e51b815260206004820152601a60248201527f4445583a20616c726561647920686173206c6971756964697479000000000000604482015260640161025b565b47600181905533600081815260026020526040808220939093555491516323b872dd60e01b81526004810191909152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190610cdd565b6109995760405162461bcd60e51b815260040161025b90610cff565b505060015490565b60008034116109f25760405162461bcd60e51b815260206004820152601d60248201527f4445583a204d7573742073656e642045544820746f206465706f736974000000604482015260640161025b565b60006109fe3447610cca565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190610cb1565b9050600082610a7f8334610c5f565b610a899190610c8f565b610a94906001610c7c565b905060008360015434610aa79190610c5f565b610ab19190610c8f565b33600090815260026020526040812080549293508392909190610ad5908490610c7c565b925050819055508060016000828254610aee9190610c7c565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6e9190610cdd565b610b8a5760405162461bcd60e51b815260040161025b90610cff565b6040805182815234602082015290810183905233907f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009060600160405180910390a2509392505050565b600080600060608486031215610be957600080fd5b505081359360208301359350604090920135919050565b600060208284031215610c1257600080fd5b5035919050565b600060208284031215610c2b57600080fd5b81356001600160a01b0381168114610c4257600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c7657610c76610c49565b92915050565b80820180821115610c7657610c76610c49565b600082610cac57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610cc357600080fd5b5051919050565b81810381811115610c7657610c76610c49565b600060208284031215610cef57600080fd5b81518015158114610c4257600080fd5b6020808252601a908201527f4445583a20546f6b656e207472616e73666572206661696c656400000000000060408201526060019056fea26469706673582212201f4260af33d43c2270a4f4024459ab78deabbe9c01369c3cc7ff37927f74009e64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/DEX.sol:DEX",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 85,
        "contract": "contracts/DEX.sol:DEX",
        "label": "totalLiquidity",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "contracts/DEX.sol:DEX",
        "label": "liquidity",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}